{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 100, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/yuito/Desktop/my-price-app/src/lib/supabase.js"],"sourcesContent":["import { createClient } from \"@supabase/supabase-js\";\r\n\r\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;\r\nconst supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY;\r\n\r\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey);\r\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM;AACN,MAAM;AAEC,MAAM,WAAW,CAAA,GAAA,yLAAA,CAAA,eAAY,AAAD,EAAE,aAAa","debugId":null}},
    {"offset": {"line": 114, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/yuito/Desktop/my-price-app/app/api/test/route.js"],"sourcesContent":["import { supabase } from \"@/lib/supabase\";\r\n\r\nexport async function GET() {\r\n  try {\r\n    const { data, error } = await supabase.from(\"products\").select(\"*\");\r\n\r\n    if (error) {\r\n      console.error(\"Supabase fetch error:\", error);\r\n      return new Response(JSON.stringify({ error: error.message }), { status: 500 });\r\n    }\r\n\r\n    console.log(\"Fetched data:\", data); // 取得したデータをログ出力\r\n\r\n    return new Response(JSON.stringify(data), { status: 200 });\r\n  } catch (err) {\r\n    console.error(\"GET Error:\", err);\r\n    return new Response(JSON.stringify({ error: \"Internal Server Error\" }), { status: 500 });\r\n  }\r\n}\r\n\r\nexport async function POST(req) {\r\n  try {\r\n    const body = await req.json();\r\n    console.log(\"Received body:\", body);\r\n\r\n    const { name, price } = body;\r\n    if (!name || !price) {\r\n      return new Response(JSON.stringify({ error: \"Missing name or price\" }), { status: 400 });\r\n    }\r\n\r\n    const { data, error } = await supabase.from(\"products\").insert([{ name, price }]).select();\r\n\r\n    if (error) {\r\n      console.error(\"Supabase insert error:\", error);\r\n      return new Response(JSON.stringify({ error: error.message }), { status: 500 });\r\n    }\r\n\r\n    console.log(\"Inserted data:\", data); // 追加されたデータをログ出力\r\n\r\n    return new Response(JSON.stringify(data), { status: 201 });\r\n  } catch (err) {\r\n    console.error(\"POST Error:\", err);\r\n    return new Response(JSON.stringify({ error: \"Internal Server Error\" }), { status: 500 });\r\n  }\r\n}\r\n\r\nexport async function DELETE(req) {\r\n  try {\r\n    const body = await req.json();\r\n    console.log(\"Received delete request:\", body);\r\n\r\n    const { id } = body;\r\n    if (!id) {\r\n      return new Response(JSON.stringify({ error: \"Missing id\" }), { status: 400 });\r\n    }\r\n\r\n    const { error } = await supabase.from(\"products\").delete().eq(\"id\", id);\r\n\r\n    if (error) {\r\n      console.error(\"Supabase delete error:\", error);\r\n      return new Response(JSON.stringify({ error: error.message }), { status: 500 });\r\n    }\r\n\r\n    console.log(\"Deleted product with id:\", id);\r\n    return new Response(JSON.stringify({ message: \"Deleted successfully\", id }), { status: 200 });\r\n  } catch (err) {\r\n    console.error(\"DELETE Error:\", err);\r\n    return new Response(JSON.stringify({ error: \"Internal Server Error\" }), { status: 500 });\r\n  }\r\n}\r\n\r\n\r\nexport async function PUT(req) {\r\n  try {\r\n    const body = await req.json();\r\n    console.log(\"Received update request:\", body);\r\n\r\n    const { id, name, price } = body;\r\n    console.log(\"Type of id:\", typeof id, \"Value of id:\", id);  // ✅ ID の型と値を確認！\r\n\r\n    if (!id || !name || !price) {\r\n      return new Response(JSON.stringify({ error: \"Missing id, name, or price\" }), { status: 400 });\r\n    }\r\n\r\n    const { data, error } = await supabase\r\n      .from(\"products\")\r\n      .update({ name, price })\r\n      .eq(\"id\", Number(id))  // ✅ `id` を確実に `INTEGER` に変換！\r\n      .select();  // ✅ 更新後のデータを取得\r\n\r\n    if (error) {\r\n      console.error(\"Supabase update error:\", error);\r\n      return new Response(JSON.stringify({ error: error.message }), { status: 500 });\r\n    }\r\n\r\n    console.log(\"Updated product:\", data);  // ✅ 更新後のデータを確認\r\n    return new Response(JSON.stringify({ message: \"Updated successfully\", data }), { status: 200 });\r\n  } catch (err) {\r\n    console.error(\"PUT Error:\", err);\r\n    return new Response(JSON.stringify({ error: \"Internal Server Error\" }), { status: 500 });\r\n  }\r\n}\r\n\r\n"],"names":[],"mappings":"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","debugId":null}}]
}